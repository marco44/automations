# Imported from https://github.com/rotilho/home-assistant-blueprints/blob/main/trv_calibrator.yaml
blueprint:
  name: TRV Calibrator
  description: Calibrate your TRV using an external sensor
  domain: automation

  input:
    trv:
      name: Smart TRV
      selector:
        entity:
          domain: climate
    temperature_sensor:
      name: Temperature Sensor
      description: Sensor used to calibrate your TRV
      selector:
        entity:
          domain: sensor
          device_class: temperature
    trv_calibration_number:
      name: TRV Calibration Entity
      description: If you can't find it it's possible that your TRV don't support calibration. Consider using the Better Thermostat custom integration instead.
      selector:
        entity:
          domain: number
          #device_class: temperature
    delay_input:
      name: Delay
      description: Don't update the TRV more than every..., when the sensor's temperature is stable
      selector:
        duration:
      default:
        hours: 1
        minutes: 0
        seconds: 0

# We want the latest state to be the one that's going to be applied, so we want to be "suicided" before applying if someone else comes in  in the delay_input
mode: restart


variables:
  trv: !input trv
  trv_calibration_number: !input trv_calibration_number
  temperature_sensor: !input temperature_sensor
  delay_input: !input delay_input

trigger:
  - platform: state
    entity_id: !input temperature_sensor
    # empty to means any state that stays the same for that long
    to:
    for:
      !input delay_input

#  - platform: state
#    entity_id: !input trv_calibration_number
#    for:
#      hours: 0
#      minutes: 0
#      seconds: 0

condition:
  - condition: template
    value_template: '{{ state_attr(trv, "current_temperature") != None }}'
  - condition: template
    value_template: '{{ states(trv_calibration_number) != "unavailable" and states(trv_calibration_number) != "unknown" }}'
  - condition: template
    value_template: '{{ states(temperature_sensor) != "unavailable" and states(temperature_sensor) != "unknown" }}'

action:
  #  - delay: !input delay_input
  - service: number.set_value
    target:
      entity_id: !input trv_calibration_number
    data:
      value: >-
            {% set room_temperature = states(temperature_sensor) | float %}
            {% set trv_temperature = state_attr(trv, "current_temperature") | float(0) %}

            {% set trv_calibration = states(trv_calibration_number) | float %}
            {% set trv_calibration_min = state_attr(trv_calibration_number, "min") | float(-5) %}
            {% set trv_calibration_max = state_attr(trv_calibration_number, "max") | float(5) %}
            {% set trv_calibration_step = state_attr(trv_calibration_number, "step") | float(1) %}

            {% set step = trv_calibration_step | string %}

            {% if step.split(".") | length > 1 -%}
              {% set trv_calibration_step_decimals = step.split(".")[1] | length %}
            {%- else -%}
              {% set trv_calibration_step_decimals = 0 %}
            {%- endif %}


            {% set new_trv_calibration = room_temperature - trv_temperature + trv_calibration %}
            {% set new_trv_calibration_bounded = [ [ (new_trv_calibration - new_trv_calibration % trv_calibration_step) | round(trv_calibration_step_decimals), trv_calibration_min ] | max, trv_calibration_max ] | min %}

            {% if new_trv_calibration_bounded < trv_calibration - trv_calibration_step or trv_calibration + trv_calibration_step < new_trv_calibration_bounded -%}
              {{ new_trv_calibration_bounded }}
            {%- else -%}
              {{ states(trv_calibration_number) }}
            {%- endif %}

